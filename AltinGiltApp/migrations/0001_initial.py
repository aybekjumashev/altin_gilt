# Generated by Django 5.2 on 2025-05-10 18:24

import AltinGiltApp.models
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Elon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomi', models.CharField(max_length=200)),
                ('joylashuvi', models.CharField(max_length=100)),
                ('turi', models.CharField(choices=[('Uy', 'Uy'), ('Kvartira', 'Kvartira'), ('Yer', 'Yer')], default='Uy', max_length=10)),
                ('narxi', models.PositiveIntegerField()),
                ('batafsil', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('PENDING', 'Moderatsiyada'), ('APPROVED', 'Tasdiqlangan'), ('REJECTED', 'Rad etilgan'), ('DRAFT', 'Qoralama')], db_index=True, default='PENDING', max_length=10)),
                ('moderation_notes', models.TextField(blank=True, null=True, verbose_name='Moderator izohi (rad etish sababi)')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Rasm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=AltinGiltApp.models.elon_rasm_path)),
                ('elon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rasmlar', to='AltinGiltApp.elon')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('phone_number', models.CharField(help_text='Telefon raqamingizni +998XXXXXXXXX formatida kiriting.', max_length=17, unique=True, validators=[django.core.validators.RegexValidator(message="Telefon raqami formati noto'g'ri. Misol: '+998901234567'", regex='^\\+?1?\\d{9,15}$')], verbose_name='telefon raqami')),
                ('first_name', models.CharField(max_length=150, verbose_name='ism')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='familiya')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='elektron pochta')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'foydalanuvchi',
                'verbose_name_plural': 'foydalanuvchilar',
            },
        ),
        migrations.AddField(
            model_name='elon',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='elonlar', to=settings.AUTH_USER_MODEL),
        ),
    ]
